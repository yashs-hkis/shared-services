generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  output          = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["user_schema", "vehicle_schema"]
}

// From user_schema
model Customer {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  devices CustomerDevices[]
  otp     otps[]

  @@map("customers")
  @@schema("user_schema")
}

model CustomerDevices {
  id         String    @id @default(uuid())
  customerId String    @map("customer_id")
  token      String    @map("token")
  deviceId   String    @map("device_id")
  osType     String    @map("os_type")
  osVersion  String    @map("os_version")
  appVersion String    @map("app_version")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  Customer Customer? @relation(fields: [customerId], references: [id])

  @@map("customer_devices")
  @@schema("user_schema")
}

// Enum for OTP channels
enum channelType {
  SMS
  EMAIL
  WHATSAPP

  @@schema("user_schema")
}

// OTP model
model otps {
  id          String      @id @default(uuid())
  customerId  String?     @map("customer_id")
  partnerId   String?     @map("partner_id")
  otp         String      @map("otp") @db.Text
  channelType channelType @map("channel_type") // Uses the enum defined above
  isVerified  Boolean     @default(false) @map("is_verified")
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  deletedAt   DateTime?   @map("deleted_at")

  // Relations
  Customer Customer? @relation(fields: [customerId], references: [id])

  @@map("otps")
  @@schema("user_schema")
}
